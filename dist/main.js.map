{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNyB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC,uBAAuB,oBAAoB;AAC3C,iDAAiD,QAAQ;AACzD,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iDAAiD,mDAAmD;AACpG,8CAA8C,oCAAoC;AAClF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,mBAAmB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,C","sources":["webpack://codejam/./src/css/main.scss?6e52","webpack://codejam/webpack/bootstrap","webpack://codejam/webpack/runtime/make namespace object","webpack://codejam/./src/js/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import '../css/main.scss'\n\nfunction creatEl(name) {\n    return document.createElement(name ? name : 'div')\n}\n\nlet sArr = []\nlet sTime = 0\nlet sMoves = 0\nlet sActive = false\nlet sSize = 4\nlet isMoveing = false\nlet sPaused = false\nlet sFinished = false\nlet isMenuOpened = false\nlet wasActive = false\nlet soundOn = localStorage.getItem('soundOn')\nsoundOn = soundOn ? soundOn == 'true' : true\n\nlet resultArr = getResultsArray()\n\nlet nMoves, nTime, nMenu, nGame, nullGap\n\nlet body = document.body\n\nfunction createAllElements() {\n    let elContainer = creatEl()\n    elContainer.classList.add('container')\n    const elMenu = createElMenu()\n    const elState = creatElState()\n    nGame = creatElGame()\n    const elСhoice = creatElChoice()\n\n    elContainer.appendChild(elMenu)\n    elContainer.appendChild(elState)\n    elContainer.appendChild(nGame)\n    elContainer.appendChild(elСhoice)\n    body.appendChild(elContainer)\n    refreshDrags()\n}\n\nfunction createElMenu() {\n    const elMenu = creatEl()\n    elMenu.classList.add('menu-block')\n    const elMenuBtn = creatEl('button')\n    elMenuBtn.classList.add('menu-button')\n    elMenuBtn.textContent = 'menu'\n    elMenuBtn.onclick = () => showMenu()\n    elMenuBtn.onmouseover = playHover\n    elMenu.appendChild(elMenuBtn)\n    nMenu = elMenuBtn\n    return elMenu\n}\nfunction creatElState() {\n    const elState = creatEl()\n    elState.classList.add('state')\n    const elMoves = creatEl('p')\n    elMoves.classList.add('state__moves')\n    elMoves.textContent = 'Moves: 0'\n    const elTime = creatEl('p')\n    elTime.classList.add('state__time')\n    elTime.textContent = 'Time: 00:00'\n\n    elState.appendChild(elMoves)\n    elState.appendChild(elTime)\n    nMoves = elMoves\n    nTime = elTime\n    return elState\n}\nfunction creatElChoice() {\n    const elСhoice = creatEl('')\n    elСhoice.classList.add('choice')\n\n    const elChoiseBlock = creatEl('ul')\n    elChoiseBlock.classList.add('choice__list')\n\n    new Array(3, 4, 5, 6, 7, 8).forEach(s => {\n        const elLi = creatEl('li')\n        elLi.classList.add('choice__size-'+s)\n        elLi.textContent = s + 'x' + s\n        elLi.onmouseover = playHover\n        elLi.onclick = () => {\n            playClick()\n            sPaused = false;\n            changeSize(s)\n        }\n        elChoiseBlock.appendChild(elLi)\n    });\n    \n    elСhoice.appendChild(elChoiseBlock)\n    return elСhoice\n}\n\nfunction creatElGame() {\n    const elGame = creatEl()\n    elGame.classList.add('game-wrapper')\n    const elGrid = creatEl()\n    elGrid.classList.add('game-grid')\n    elGrid.classList.add('game-grid_'+sSize)\n\n    const elChoiseTitle = creatEl('h3')\n    elChoiseTitle.classList.add('choice__title')\n    elChoiseTitle.textContent = \n        'Frame size: ' + sSize + 'x' + sSize\n\n    for(let i = 0; i < sArr.length; i++) {\n        for(let j = 0; j < sArr[i].length; j++){\n            const elGap = creatEl()\n            elGap.classList.add('game-grid__sell')\n            elGap.classList.add('game-grid__sell_'+(i * sSize + j + 1))\n            const elTile = creatEl()\n            if(sArr[i][j] != 0) {\n                elTile.classList.add('game-grid__tile')\n                elTile.classList.add('game-grid__tile_'+sArr[i][j])\n                elTile.textContent = sArr[i][j]\n                elTile.addEventListener('click', moveClick)\n                elGap.appendChild(elTile)\n            } else {\n                nullGap = elGap\n            }\n            elGrid.appendChild(elGap)\n        }\n    }\n\n    elGame.appendChild(elChoiseTitle)\n    elGame.appendChild(elGrid)\n    return elGame\n}\n\nfunction createStartArray() {\n    sArr = []\n    for (let i = 0; i < sSize; i++) {\n        sArr.push(new Array(sSize))\n        for (let j = 0; j < sSize; j++) {\n            sArr[i][j] = i * sSize + j + 1\n        }\n    }\n    sArr[sSize - 1][sSize - 1] = 0\n}\n\nfunction changeSize(s) {\n    playNewGame()\n    sFinished = false\n    sActive = false\n    sSize = s\n    sTime = 0\n    sMoves = 0\n    body.innerHTML = ''\n    isMoveing = false\n    runGame()\n}\n\n//ACTIONS\n\nfunction moveClick(e) {\n    if(isMoveing || !sActive) return\n    isMoveing = true\n    let num = Number(this.classList[1].split('_')[3])\n    let [cI, cJ, nullI, nullJ] = findNumAndZero(num)\n    //1 - if this tile next to gap\n    if (Math.abs(nullI - cI) + Math.abs(nullJ - cJ) != 1) {\n        isMoveing = false\n        return\n    }\n    playMove()\n    nMoves.textContent = 'Moves: ' + ++sMoves\n    sArr[nullI][nullJ] = num\n    sArr[cI][cJ] = 0\n    let newGap = this.parentNode\n    let classMove = ''\n    if(nullI == cI && nullJ < cJ) classMove = 'move-left'\n    if(nullI == cI && nullJ > cJ) classMove = 'move-right'\n    if(nullI < cI && nullJ == cJ) classMove = 'move-up'\n    if(nullI > cI && nullJ == cJ) classMove = 'move-down'\n    this.classList.add(classMove)\n    checkMoveForEnd()\n    setTimeout(() => {\n        this.classList.remove(classMove)\n        nullGap.appendChild(this)\n        nullGap = newGap\n        isMoveing = false\n        refreshDrags()\n    }, 200);\n}\nfunction findNumAndZero(num = -1) {\n    let cI = -1\n    let cJ = -1\n    let nullI = -1\n    let nullJ = -1\n    for(let i = 0; i < sArr.length; i++) {\n        for(let j = 0; j < sArr[i].length; j++) {\n            if(num != -1 && sArr[i][j] == num) { cI = i; cJ = j; }\n            if(sArr[i][j] == 0) { nullI = i; nullJ = j }\n        }\n    }\n    return Array(cI, cJ, nullI, nullJ)\n}\n\nfunction startGame(isLoaded = false) {\n    if(!isLoaded) shufleArray()\n    sActive = true\n}\n\n//TIMER\nsetTimeout(() => {\n    timerSec()\n}, 1000);\nfunction timerSec() {\n    setTimeout(() => {\n        timerSec()\n    }, 1000);\n    if(!sActive) return\n    sTime++\n    nTime.textContent = 'Time: '+getTimeStr(sTime)\n}\nfunction getTimeStr(t) {\n    let m = Math.trunc(t / 60)\n    let s = t % 60\n    return (m < 10 ? \"0\" + m : m) + ':' + (s < 10 ? \"0\" + s : s)\n}\n\nfunction shufleArray() {\n    let rndMoves = Math.trunc(Math.random() * sSize**3 + sSize ** 5)\n    // let rndMoves = 3\n    \n    for(let k = 0; k < rndMoves; k++) {\n        let moveNum = -1\n        while(moveNum < 1 || moveNum > 4) {\n            moveNum = Math.trunc( Math.random() * 4 + 1 )\n        }\n        const [cI, cJ, nullI, nullJ] = findNumAndZero()\n        if(moveNum == 1) { nullI < sSize - 1 ? move(1, 0, nullI, nullJ) : move(-1, 0, nullI, nullJ)}\n        if(moveNum == 2) { nullI > 0 ? move(-1, 0, nullI, nullJ) : move(1, 0, nullI, nullJ)}\n        if(moveNum == 3) { nullJ < sSize - 1 ? move(0, 1, nullI, nullJ) : move(0, -1, nullI, nullJ)}\n        if(moveNum == 4) { nullJ > 0 ? move(0, -1, nullI, nullJ) : move(0, 1, nullI, nullJ)}\n    }\n\n    function move(i = 0, j = 0, nullI, nullJ) {\n        sArr[nullI][nullJ] = sArr[nullI + i][nullJ + j]\n        sArr[nullI + i][nullJ + j] = 0\n    }\n}\n\nfunction checkMoveForEnd() {\n    let isEnd = sArr.flat().reduce((w, c, i) => w && ((c == i + 1) || (c == 0)), true)\n    if(isEnd) {\n        showMessage(\"Hooray! You solved the puzzle in \"+getTimeStr(sTime)+\" and \"+sMoves+\" moves!\", 3000, true)\n        saveResult()\n        sFinished = true\n        sActive = false\n        sMoves = 0;\n        sTime = 0;\n    }\n}\n\nfunction showMessage(msg, timeout = 3000, isVictory = false) {\n    isVictory ? playVictory() : playMessage()\n    const popup = creatEl()\n    popup.classList.add('popup')\n    const popupBack = creatEl()\n    popupBack.classList.add('popup__back')\n    const popupMessage = creatEl()\n    popupMessage.classList.add('popup__message')\n    popupMessage.textContent = msg\n\n    popup.appendChild(popupBack)\n    popup.appendChild(popupMessage)\n    body.appendChild(popup)\n\n    setTimeout(() => {\n        body.removeChild(popup)\n    }, timeout);\n}\n\n//MENU\nfunction showMenu() {\n    if(isMenuOpened) {\n        isMenuOpened = false\n        hideMenu()\n        return\n    }\n    isMenuOpened = true\n    playClick()\n    wasActive = sActive\n    sActive = false\n    if(!sFinished) hideGame()\n    const elMenu = creatEl()\n    elMenu.classList.add('menu')\n    const elMenuWrapper = creatEl()\n    elMenuWrapper.classList.add('menu__wrapper')\n\n    const elBtnStart = creatEl('button')\n    elBtnStart.classList.add('menu__button')\n    elBtnStart.classList.add('menu__btn-start')\n    elBtnStart.textContent = sPaused ? 'resume' : 'new game'\n    elBtnStart.onclick = () => resumeGame()\n\n    const elBtnPause = creatEl('button')\n    elBtnPause.classList.add('menu__button')\n    elBtnPause.classList.add('menu__btn-pause')\n    elBtnPause.textContent = 'pause'\n    elBtnPause.onclick = () => pauseGame()\n\n    const elBtnSave = creatEl('button')\n    elBtnSave.classList.add('menu__button')\n    elBtnSave.classList.add('menu__btn-save')\n    elBtnSave.textContent = 'save'\n    elBtnSave.onclick = () => saveGame(wasActive)\n\n    const elBtnLoad = creatEl('button')\n    elBtnLoad.classList.add('menu__button')\n    elBtnLoad.classList.add('menu__btn-load')\n    elBtnLoad.textContent = 'load'\n    elBtnLoad.onclick = () => loadGame()\n\n    const elBtnResults = creatEl('button')\n    elBtnResults.classList.add('menu__button')\n    elBtnResults.classList.add('menu__btn-results')\n    elBtnResults.textContent = 'results'\n    elBtnResults.onclick = () => {\n        showResults(sSize, wasActive)\n        setTimeout(() => {\n            sActive = false\n            if(!sFinished) hideGame()\n        }, 4);\n    }\n\n    const elBtnSound = creatEl('button')\n    elBtnSound.classList.add('menu__button')\n    elBtnSound.classList.add('menu__btn-sound')\n    if(soundOn) elBtnSound.classList.add('menu__btn-sound_on')\n    elBtnSound.textContent = 'sound (' + (soundOn ? 'on)' : 'off)')\n    elBtnSound.onclick = switchSound\n\n    elMenuWrapper.appendChild(elBtnStart)\n    elMenuWrapper.appendChild(elBtnPause)\n    elMenuWrapper.appendChild(elBtnSave)\n    elMenuWrapper.appendChild(elBtnLoad)\n    elMenuWrapper.appendChild(elBtnResults)\n    elMenuWrapper.appendChild(elBtnSound)\n    elBtnStart.onmouseover = playHover\n    elBtnPause.onmouseover = playHover\n    elBtnSave.onmouseover = playHover\n    elBtnLoad.onmouseover = playHover\n    elBtnResults.onmouseover = playHover\n    elBtnSound.onmouseover = playHover\n\n    elMenu.appendChild(elMenuWrapper)\n    nMenu.after(elMenu)\n    setTimeout (() => {\n        body.onclick = () => hideMenu(elMenu)\n    }, 2)\n    function hideMenu() {\n        if(document.querySelector('.menu-block').children.length >= 2) {\n            isMenuOpened = false\n            document.querySelector('.menu-block').removeChild(document.querySelector('.menu-block').children[1])\n            if(!sPaused) showGame()\n            sActive = wasActive\n        }\n        body.onclick = null\n    }\n}\n\nfunction resumeGame() {\n    playClick()\n    setTimeout(() => {\n        showGame()\n        if(sPaused && !sFinished) {\n            showMessage(\"Resume game\", 1500)\n            setTimeout(() => {\n                sActive = true\n                sPaused = false\n            }, 1500);\n        } else {\n            changeSize(sSize)\n            sActive = false\n            playNewGame()\n            showMessage(\"New game started\", 1500)\n            setTimeout(() => {\n                sActive = true\n            }, 1500);\n        }\n    }, 2)\n}\nfunction pauseGame() {\n    playClick()\n    if(sFinished) return\n    setTimeout(() => {\n        hideGame()\n        sActive = false\n        sPaused = true\n    }, 2)\n}\nfunction saveGame(wActive) {\n    playClick()\n    setTimeout(() => {\n        localStorage.setItem('array', JSON.stringify(sArr))\n        localStorage.setItem('time', sTime)\n        localStorage.setItem('moves', sMoves)\n        localStorage.setItem('size', sSize)\n        localStorage.setItem('active', wActive)\n        localStorage.setItem('paused', sPaused)\n        localStorage.setItem('finished', sFinished)\n\n        let wasActive = sActive\n        sActive = false\n        showMessage(\"Game has been saved!\", 2000)\n        setTimeout(() => {\n            sActive = wasActive\n        }, 2000);\n    }, 2)\n}\nfunction loadGame() {\n    playClick()\n    setTimeout(() => {\n        let gArr = localStorage.getItem('array')\n        let gTime = localStorage.getItem('time')\n        let gMoves = localStorage.getItem('moves')\n        let gSize = localStorage.getItem('size')\n        let gActive = localStorage.getItem('active')\n        let gPaused = localStorage.getItem('paused')\n        let gFinished = localStorage.getItem('finished')\n        if(!gArr || !gTime || !gMoves || !gSize || !gActive || !gPaused || !gFinished) {\n            let wasActive = sActive\n            sActive = false\n            showMessage(\"Nothing to load! :(\", 2000)\n            setTimeout(() => {\n                sActive = wasActive\n            }, 2000);\n            return\n        }\n        // changeSize(Number(gSize))\n        sSize = Number(gSize)\n        sArr = JSON.parse(gArr)\n        sTime = Number(gTime)\n        sMoves = Number(gMoves)\n        sActive = gActive == 'true'\n        sPaused = gPaused == 'true'\n        sFinished = gFinished == 'true'\n        body.innerHTML = ''\n        createAllElements()\n        if(sPaused) hideGame()\n        nMoves.textContent = nMoves.textContent = 'Moves: ' + sMoves\n        nTime.textContent = 'Time: '+getTimeStr(sTime)\n        \n        let wasActive = sActive\n        sActive = false\n        showMessage(\"Saved game was loaded!\", 2000)\n        setTimeout(() => {\n            sActive = wasActive\n        }, 2000);\n        return\n    }, 2)\n}\n\n//HIDE/SHOW\nfunction hideGame() {\n    document.querySelectorAll('.game-grid__tile').forEach(el => el.classList.add('hide-tile'))\n}\nfunction showGame() {\n    document.querySelectorAll('.game-grid__tile').forEach(el => el.classList.remove('hide-tile'))\n}\n\n//SOUND\nfunction switchSound(e) {\n    soundOn = !soundOn\n    localStorage.setItem('soundOn', soundOn)\n}\n\nconst mp3hover = new Audio('./src/audio/hover.mp3')\nconst mp3click = new Audio('./src/audio/click.mp3')\nconst mp3message = new Audio('./src/audio/message.mp3')\nconst mp3move = new Audio('./src/audio/move.mp3')\nconst mp3newGame = new Audio('./src/audio/newgame.mp3')\nconst mp3victory = new Audio('./src/audio/win.mp3')\n\nfunction playHover() {\n    if(!soundOn) return\n    mp3hover.currentTime = 0\n    mp3hover.play()\n}\nfunction playMove() {\n    if(!soundOn) return\n    mp3move.currentTime = 0\n    mp3move.play()\n}\nfunction playClick() {\n    if(!soundOn) return\n    mp3click.currentTime = 0\n    mp3click.play()\n}\nfunction playMessage() {\n    if(!soundOn) return\n    mp3message.currentTime = 0\n    mp3message.play()\n}\nfunction playVictory() {\n    if(!soundOn) return\n    mp3victory.currentTime = 0\n    mp3victory.play()\n}\nfunction playNewGame() {\n    if(!soundOn) return\n    mp3newGame.currentTime = 0\n    mp3newGame.play()\n}\n\n//RESULTS\nfunction saveResult() {\n    resultArr = getResultsArray()\n    resultArr.push({\n        date: getFormatDate(new Date()),\n        moves: sMoves,\n        time: sTime,\n        size: sSize\n    })\n    localStorage.setItem('resultArr', JSON.stringify(resultArr))\n}\nfunction getFormatDate(date) {\n    let str = date.toLocaleDateString('de-DE', { year: '2-digit', month: 'numeric', day: 'numeric' }) + ' '\n    str += date.toLocaleTimeString('ru-RU', { hour: 'numeric', minute: 'numeric' })\n    return str\n}\nfunction showResults(resSize, wasActive) {\n    playClick()\n    hideResults()\n\n    const elResult = creatEl()\n    elResult.classList.add('popup')\n    const popupBack = creatEl()\n    popupBack.classList.add('popup__back')\n    const popupWrapper = creatEl()\n    popupWrapper.classList.add('popup__wrapper')\n    popupWrapper.onclick = e => {\n        if(e.target == popupWrapper) closeResults(e, wasActive)\n    }\n    const popupContainer = creatEl()\n    popupContainer.classList.add('container')\n\n    const elTitle = creatEl()\n    elTitle.classList.add('popup__title')\n    elTitle.textContent = 'Results ' + resSize + 'x' + resSize\n    const elGrid = creatEl()\n    elGrid.classList.add('popup__grid')\n\n    const elButtons = creatEl()\n    elButtons.classList.add('popup__buttons')\n    for(let i = 3; i <= 8; i++) {\n        const elBtn = creatEl('button')\n        elBtn.classList.add('popup__btn')\n        elBtn.textContent = i + 'x' + i\n        if(resSize != i) {\n            elBtn.onclick = () => showResults(i, wasActive)\n            elBtn.onmouseover = playHover\n        } else {\n            elBtn.classList.add('popup__btn_active')\n        }\n        elButtons.appendChild(elBtn)\n    }\n\n    let filterdArr = resultArr\n        .filter(it => it.size == resSize)\n        .sort((a, b) => {\n            return a.time - b.time != 0 \n                ? a.time - b.time \n                : a.moves - b.moves\n        }).slice(0, 10)\n    if (filterdArr.length > 0) {\n        createGrid(elGrid, filterdArr)\n    } else {\n        const elMessage = creatEl()\n        elMessage.classList.add('popup__empty-msg')\n        elMessage.innerHTML = 'There\\'s nothing to show!<br>You haven\\'t completed these puzzles yet!<br>Try to view the results of a different game size.'\n        elGrid.appendChild(elMessage)\n    }\n\n    popupContainer.appendChild(elTitle)\n    popupContainer.appendChild(elButtons)\n    popupContainer.appendChild(elGrid)\n    elResult.appendChild(popupBack)\n    popupWrapper.appendChild(popupContainer)\n    elResult.appendChild(popupWrapper)\n\n    const elClose = creatEl()\n    elClose.classList.add('popup__close')\n    elClose.textContent = 'X'\n    elClose.onclick = e => closeResults(e, wasActive)\n    elClose.onmouseover = playHover\n    popupContainer.appendChild(elClose)\n\n    body.appendChild(elResult)\n}\nfunction closeResults(e, wasActive) {\n    hideResults()\n    if(!sPaused) showGame()\n    sActive = wasActive\n}\nfunction hideResults() {\n    let oldRes = document.querySelector('.popup')\n    if(oldRes) body.removeChild(oldRes)\n}\nfunction getResultsArray() {\n    let res = localStorage.getItem('resultArr')\n    return res ? JSON.parse(res) : []\n}\nfunction createGrid(elGrid, filterdArr) {\n    const elNum = creatEl()\n    elNum.classList.add('popup__header')\n    elNum.textContent = '#'\n    const elDate = creatEl()\n    elDate.classList.add('popup__header')\n    elDate.textContent = 'date'\n    const elMoves = creatEl()\n    elMoves.classList.add('popup__header')\n    elMoves.textContent = 'moves'\n    const elTime = creatEl()\n    elTime.classList.add('popup__header')\n    elTime.textContent = 'time'\n    elGrid.appendChild(elNum)\n    elGrid.appendChild(elDate)\n    elGrid.appendChild(elMoves)\n    elGrid.appendChild(elTime)\n    filterdArr.forEach((it, i) => {\n        const elNum = creatEl()\n        elNum.classList.add('popup__num')\n        elNum.textContent = i + 1\n        const elDate = creatEl()\n        elDate.classList.add('popup__item')\n        elDate.textContent = it.date\n        const elMoves = creatEl()\n        elMoves.classList.add('popup__item')\n        elMoves.textContent = it.moves\n        const elTime = creatEl()\n        elTime.classList.add('popup__item')\n        elTime.textContent = getTimeStr(it.time)\n        elGrid.appendChild(elNum)\n        elGrid.appendChild(elDate)\n        elGrid.appendChild(elMoves)\n        elGrid.appendChild(elTime)\n    })\n}\n\n//DRAGs\nlet dragingEl = null\nfunction refreshDrags() {\n    let [cI, cJ, nullI, nullJ] = findNumAndZero(0)\n    document.querySelectorAll('.game-grid__tile').forEach(el => {\n        el.setAttribute('draggable', false)\n    })\n    let elBot = document\n        .querySelector('.game-grid__sell_' + ((nullI+1)*sSize + nullJ+1))\n    let elTop = document\n        .querySelector('.game-grid__sell_' + ((nullI-1)*sSize + nullJ+1))\n    let elRht = document\n        .querySelector('.game-grid__sell_' + (nullI*sSize + nullJ+2))\n    let elLft = document\n        .querySelector('.game-grid__sell_' + (nullI*sSize + nullJ))\n    if(elTop) {\n        elTop = elTop.firstChild\n        elTop.setAttribute('draggable', true)\n        elTop.ondragstart = startDrag\n        elTop.ondragend = endDrag\n    }\n    if(elBot) {\n        elBot = elBot.firstChild\n        elBot.setAttribute('draggable', true)\n        elBot.ondragstart = startDrag\n        elBot.ondragend = endDrag\n    }\n    if(elLft) {\n        elLft = elLft.firstChild\n        elLft.setAttribute('draggable', true)\n        elLft.ondragstart = startDrag\n        elLft.ondragend = endDrag\n    }\n    if(elRht) {\n        elRht = elRht.firstChild\n        elRht.setAttribute('draggable', true)\n        elRht.ondragstart = startDrag\n        elRht.ondragend = endDrag\n    }\n    let elGap = document\n        .querySelector('.game-grid__sell_' + (nullI * sSize + nullJ + 1))\n    elGap.addEventListener('dragover', (e) => {e.preventDefault()})\n    elGap.ondrop = dropElem\n}\nfunction dropElem(e) {\n    e.preventDefault();\n    if(!sActive || this != nullGap) return\n    let num = Number(dragingEl.classList[1].split('_')[3])\n    let newGap = dragingEl.parentNode\n    nullGap = newGap\n    this.appendChild(dragingEl)\n    moveInArr(num)\n    refreshDrags()\n}\nfunction moveInArr(num) {\n    let [cI, cJ, nullI, nullJ] = findNumAndZero(num)\n    playMove()\n    nMoves.textContent = 'Moves: ' + ++sMoves\n    sArr[nullI][nullJ] = num\n    sArr[cI][cJ] = 0\n    checkMoveForEnd()\n}\nfunction startDrag(e) {\n    dragingEl = this\n    setTimeout(() => {\n        this.classList.add('hide')\n    }, 0);\n}\nfunction endDrag(e) {\n    this.classList.remove('hide')\n}\n\n//Keys control\ndocument.addEventListener('keydown', (e) => {\n    let [_i, _j, nullI, nullJ] = findNumAndZero()\n\n    if(e.key == \"ArrowDown\" || e.key == \"s\") {\n        let elemNum = (nullI - 1)*sSize + nullJ + 1\n        let elemClick = document.querySelector('.game-grid__sell_' + elemNum)\n        if(elemClick) elemClick.firstChild.click()\n    }\n    if(e.key == \"ArrowUp\" || e.key == \"w\") {\n        let elemNum = (nullI + 1)*sSize + nullJ + 1\n        let elemClick = document.querySelector('.game-grid__sell_' + elemNum)\n        if(elemClick) elemClick.firstChild.click()\n    }\n    if(e.key == \"ArrowRight\" || e.key == \"d\") {\n        let elemNum = nullI*sSize + nullJ\n        let elemClick = document.querySelector('.game-grid__sell_' + elemNum)\n        if(elemClick) elemClick.firstChild.click()\n    }\n    if(e.key == \"ArrowLeft\" || e.key == \"a\") {\n        let elemNum = nullI*sSize + nullJ + 2\n        let elemClick = document.querySelector('.game-grid__sell_' + elemNum)\n        if(elemClick) elemClick.firstChild.click()\n    }\n})\n\n// RUN >>>>\nrunGame()\nfunction runGame() {\n    createStartArray()\n    startGame()\n    createAllElements()\n}"],"names":[],"sourceRoot":""}